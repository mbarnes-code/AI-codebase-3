# Generated by Django 5.0.6 on 2024-07-01 10:15

import django.core.validators
import spellbook.models.variant_alias
from django.db import migrations, models
from ._utils import PopulateNameField


class Migration(migrations.Migration):

    dependencies = [
        ('spellbook', '0025_featureneededincombo_zone_locations_override'),
    ]

    operations = [
        migrations.CreateModel(
            name='FeatureAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='featureofcard',
            name='other_prerequisites',
            field=models.TextField(blank=True, help_text='Other prerequisites that enable the feature for this card.', validators=[django.core.validators.RegexValidator(message='Unpaired double square brackets are not allowed.', regex='^(?:[^\\[]*(?:\\[(?!\\[)|\\[{2}[^\\[]+\\]{2}|\\[{3,}))*[^\\[]*$'), django.core.validators.RegexValidator(message='Symbols must be in the {1}{W}{U}{B}{R}{G}{B/P}{A}{E}{T}{Q}... format.', regex='^(?:[^\\{]*\\{(?:(?:2\\/[WUBRG]|W\\/U|W\\/B|B\\/R|B\\/G|U\\/B|U\\/R|R\\/G|R\\/W|G\\/W|G\\/U)(?:\\/P)?|CHAOS|PW|TK|[WUBRG](?:\\/P)?|[1-9][0-9]{1,2}|H[WUBRG]|[0-9CPXYZSTQEA½∞])\\})*[^\\{]*$'), django.core.validators.RegexValidator(message='Only ordinary characters are allowed.', regex='^[\\x0A\\x0D\\x20-\\x7E\\x80\\x95\\x99\\xA1\\xA9\\xAE\\xB0\\xB1-\\xB3\\xBC-\\xFF]*$')]),
        ),
        migrations.AlterField(
            model_name='combo',
            name='allow_many_cards',
            field=models.BooleanField(default=False, help_text='Allow variants to have more cards (100) than the default limit (5). On the other hand, with this option enabled, the limit on the number of allowed variants is lowered to 100, instead of the default 10000.'),
        ),
        migrations.AlterField(
            model_name='variant',
            name='id',
            field=models.CharField(help_text='Unique ID for this variant', max_length=128, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='variantalias',
            name='id',
            field=models.CharField(help_text='Unique id of this variant alias', max_length=128, primary_key=True, serialize=False, validators=[spellbook.models.variant_alias.no_variant_with_this_id], verbose_name='ID'),
        ),
        migrations.AddField(
            model_name='featureneededincombo',
            name='all_of_attributes',
            field=models.ManyToManyField(blank=True, related_name='needed_as_all_of_in_%(class)s', to='spellbook.featureattribute'),
        ),
        migrations.AddField(
            model_name='featureneededincombo',
            name='any_of_attributes',
            field=models.ManyToManyField(blank=True, related_name='needed_as_any_of_in_%(class)s', to='spellbook.featureattribute'),
        ),
        migrations.AddField(
            model_name='featureneededincombo',
            name='none_of_attributes',
            field=models.ManyToManyField(blank=True, related_name='needed_as_none_of_in_%(class)s', to='spellbook.featureattribute'),
        ),
        migrations.AddField(
            model_name='featureofcard',
            name='attributes',
            field=models.ManyToManyField(blank=True, related_name='used_as_attribute_in_%(class)s', to='spellbook.featureattribute'),
        ),
        migrations.AddField(
            model_name='featureproducedincombo',
            name='attributes',
            field=models.ManyToManyField(blank=True, related_name='used_as_attribute_in_%(class)s', to='spellbook.featureattribute'),
        ),
        PopulateNameField(),
    ]
